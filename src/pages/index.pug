extends .layout.inc.pug

block content
  section#projects
    svg#redLine
      line(x1='0', y1='0', x2='0', y2='100%')
    svg#redCircle
      circle(cx='40', cy='40', r='40')
      text(x="50%", y="55%") Now
    +project("April 2017", "This website", "#", "img/codeScreenshot.png", ["Web", "Shell scripts", "npm", "LESS", "CSS", "Pug"])
      p Created to explain and present my projects in a more practical manner that Github does.
      p Made from scratch, easily editable & hosted on Github.
      p This website is defined by meta-language such as LESS & Pug who compiles respectively to CSS & HTML. This allow the code to be as small as possible and very modular. Furthermore, when in development, I've added a watcher on some files to automatically launch the build process. In this way, there is no "build time" drawback.
      p Code strive to be minimal. This project permitted to aquaint myself with the relatively new CSS flexbox positionning system.
    +project("December 2016", "My Terminal Dashboard", "https://github.com/sd65/MyTerminalDashboard", "https://raw.githubusercontent.com/sd65/MyTerminalDashboard/master/screenshots/screen1.png", ["Go", "Terminal app", "API"])
      p 
        | I always dreamed about a screen always on presenting some useful information. The low energy small laptop WM8650
        |
        a(href="#wm8650") from a previous project
        |
        | was a perfect device for this.
      p This device can't host an X server with good performance that's why a fancy way to create such a dashboard can be a terminal app. I've chosen the Go termui library to learn the Go language.
      p Extra, nobody likes to miss to train because it left just few minutes ago. Also, the general train status is important. When all trains are cancelled because of an outage, it's better to anticipate. Furthermore, everybody likes weather forecasts. That's why I wanted my app to display all those informations.
      p For this, this app fetches some information from the RATP & the Open Weather APIs.
      p The dashboard displays the following info :
      ul 
        li Trains status
        li Next trains
        li Next bus
        li General day information
        li Weather
          ul
            li Temperature
            li Cloud coverage
            li Wind speed
            li Rain
      p You can also control the house's light bulbs thanks to the Hue system.
      p This device is now used everyday and is very convenient. I never missed a bus or discovered a cancelled train while in the station!
    +project("November 2016", "Astronomy Picture of the Day", "https://play.google.com/store/apps/details?id=com.doignon.sylvain.apodnasa", "https://lh3.googleusercontent.com/oiq7l9HuqPVw0aBTcp9LhWJ5gzakdqzu_dK70gnSofV2dNuhH1S4lcUbpKJ4S7T3tzw=h900", ["Android app", "API"])
      p This project was my third Android app but the first really useful: this app fetches and present the NASA's Picture of The Day.
      p I started this project for a school project intended to learn images gesture on Android. But instead of the dumb and useless app requested, I wanted to make this app usefull. Therefore I pushed the instructions further and came with this idea of presenting beautiful images (with gestures support of course) but along with other features. Such as:
      ul 
        li Fetch the last two Nasa Pictures of the Day
        li Create a date picker to view a past picture
        li Open the related NASA website
        li Share the app to your friends
        li Great UI?
      p This app has been great fun. I still have the app on my phone to learn space things and this app is often downloaded by people all around the globe.
    +project("November 2016", "MiniList", "https://play.google.com/store/apps/details?id=com.doignon.sylvain.simpletodo", "https://lh3.googleusercontent.com/cOE9SoDG3nfttLsd6XjatnO99QXyUf7vWyKyZOKAzoRn8UhdcyLLhW9IojxeL4CN6jY=h900", ["Android app"])
      p My second Android app was very educational and kinda useful. In fact, this app is the classic TODO app.
      p This app manages notes. Each note can have a deadline and a priority. Then, you set the task as "done". The main view allow the notes to be sorted by numerous criteria.
      p This project permitted to learn the intent, activity and list view objects in Android.
    +project("November 2016", "Temperature Convertor", "https://play.google.com/store/apps/details?id=com.doignon.sylvain.temperatureconvertor", "https://lh3.googleusercontent.com/7mlyOrQmbwWtPhnlKsmdGkEkhHmCm29N1CLfKQoK6cAjbxufccFXI-JFb6MRwCIQbQ=h900", ["Android", "Android Studio"])
      p This is a school project. The instructions were to make a temperature converter with an UI app as simple as possible. That's why there is no buttons but only two fields that convert automatically the number you input.
      p This app permitted to discover the Android developpement that I always wanted to discover.
    +project("October 2016", "WM8650", "", "img/wm8650.jpg", ["OS", "Flash", "Kernel", "Linux", "Firmware"])
      p This is one of my favourite challenge/project.
      p While friends were about to throw away this antique Android-only laptop (useless to them), I recovered this laptop challenging myself to install Linux on it.
      p First, this chineese small laptop had one of the first release of Android : Froyo. It's was painfully slow on this device and not usable not all: who support Android 2.2 nowadays?
      p As i said, I decided to make it run Linux! The possibilities could be endless after that. This device uses uboot as a bootloader and supports booting from an SD card. Luckily, the architecture armv5 is quite common. I managed to find an great OS for it: ARM Arch Linux. Others had done this before but with older kernels. So I had to to cross compile a kernel, reboot by reboot, option by option to get this device up with the latest version of ARM Linux & the Kernel (4.7 at the time).
      p This has been great fun. I learned a ton about the kernel and the ARM architecture. And more importantly, this device is now usefull! It has a fully working ethernet port, 3 USB ports, WIFI, small screen and keyboard!
    +project("September 2016", "My dotfiles", "", "https://dotfiles.github.io/images/dotfiles-logo.png", ["Linux", "Shell scripts"])
      p I love to tune everything to the perction for my usage. So, after hours on various things (Zsh, Git, etc) here's my dotfiles.
      p More info coming soon.
    +project("May 2016", "MiniVim", "https://github.com/sd65/MiniVim", "https://raw.githubusercontent.com/sd65/MiniVim/master/Screenshot.png", ["Vim","Vimrc", "Community"])
      p My first text editor was Sublime Text. I still like it. However it's not a open-source software and can't run in terminals. I always knew about Vim & Emacs but wasn't appealed by the apparent complexity and change.
      p When I had to edit a lot in files in terminals, I got tired of nano. That's why I managed to make Vim behave like Sublime Text. The MiniVim project was born.
      p I spend hours creating the most awesome vim configuration I could. That was very instructive. I discovered Vim a lot. The project is now quite big and complete and Vim is now much more intuitive for Sublime Text newcomers.
      p I use this tweaked Vim everyday at work or at home.
      p 
        | After Korben.info 
        |
        a(href="https://korben.info/minivim-chainon-manquant-entre-vim-sublimetext.html") made a post about it
        | , people took interest in the project and I had to manage it like a real small open-source project: issues, pull-requests, forks, etc.
      p This is my most successful project yet with over 270 Github stars.
    +project("May 2016", "Graf'hit.net", "http://grafhit.net", "https://raw.githubusercontent.com/sd65/New-Graf-hit/master/screenshot.png", ["Website", "Node.js", "JS", "Ajax", "Real client"])
      p For a school project, we had to realize a website with a great UX. We don't wanted to create another useless website so we ask around the university who wanted a new website. Graf'hit radio answered first.
      p We decided to develop the website using Node.js that I knew well. That way, I could teach my classmates about it.
      p One interesting requested feature were the fact that you should be able to navigate on the website without the current audio stream interupted. That's means you can't just change the page when the visitor click a link but you have to dynamically update the content using Ajax.
      p This website has some great features and got myself to know about audio in HTML5: realtime, replays, etc. It was impressive and empowering to design a website for a real usage, a radio.
      p
        a(href="https://github.com/sd65/New-Graf-hit") Source code
    +project("March 2016", "Screensaver SVG-JS", "http://sd65.github.io/screensaver-SVG-JS/", "https://raw.githubusercontent.com/sd65/screensaver-SVG-JS/gh-pages/screenshot.png", ["SVG", "JS", "Experiment"])
      p I wanted to find a fun project for a evening and learn more about SVGs.
      p That's why I created a website recreating this old Windows XP screensaver which bounce a triangle accross the screen edges.
      p
        a(href="https://github.com/sd65/screensaver-SVG-JS") Source code
    +project("February 2016", "Human2Cat Chrome Extension", "https://github.com/sd65/Human2Cat-Chrome-Extension", "https://raw.githubusercontent.com/sd65/Human2Cat-Chrome-Extension/master/screenshot.png")
      p 
       | Following my 
       a(href="#human2catlanguage") Human2Cat language experiment
       | , I wanted to be able to translate text on the fly in the browser. Furthermore, at that time, I never wrote an browser extension.
      p When a text is selected, with a right-click or a hotkey, you see the translated text. When the selection is in an editable field, the content is replaced by the translation.
      p With this project, I discovered the Chrome extension API which is quite good in my opinion. This experiment is small but improved my knowledge about browsers.
      p This extension is npw published on the Chrome Extension Store, I'm an happy man.
    +project("February 2016", "Human2Cat Language", "https://github.com/sd65/Human2Cat-Website", "https://lh3.googleusercontent.com/DFRa6b9QYixwd2cJFlVO3OSZRVllTHLpLNjciKrmrKl75I_yWsKPWGQH9nXPAMTCiCmmXlXg=s640-h400-e365")
      p Fascinated with cyphers, I wanted to create a small fun one.
      p This program can turn any text in a cat language. The, you can convert it back. It's not encrypted at all, it's basically just an fancy way to store 8 bits.
    +project("January 2016", "KikiBangBang", "https://github.com/sd65/KiKiBangBang", "")
      p Java is not my cup of tea. However, I had to made a website with it for a school project.
      p Using JavaEE, this website is KickStarter or IndiGogo simple copy. I knew nothing about Java EE so I learned a lot this way.
    +project("December 2015", "How much do you make per...?", "https://github.com/sd65/howMuchDoYouEarnPer", "")
      p I wanted to know how much I made in an hour, in a day, etc. I found website to do so. Of course you can just grab an calculator. But, I can't be the only one wanting to know this: someone had to to do it.
    +project("December 2015", "How much do you make per...?", "https://github.com/sd65/howMuchDoYouEarnPer", "")
      
